Необходимо реализовать SmartCalc v3.0:

+Программа должна быть разработана на языке Python версии 3.11
+Код программы должен находиться в папке src
+При написании кода необходимо придерживаться Google Code Style
+Необходимо разработать десктопное прикладное приложение
+-Подготовить установщик, который будет устанавливать приложение в систему со стандартными настройками (путь инсталляции, создание ярлыка)
+Необходимо подготовить реализацию с графическим пользовательским интерфейсом под Mac OS, на базе любой GUI-библиотеки или фреймворка (допустима реализация слоя GUI на HTML/CSS/JS)
+Программа должна быть реализована с использованием паттерна MVVМ или MVP, а также:
+не должно быть кода бизнес-логики в коде представлений
+не должно быть кода интерфейса в модели, презентере и модели представления
-“Ядро” калькулятора в виде алгоритма формирования и вычисления польской нотации и различных вычислительных функций подключить в виде динамической библиотеки на C/C++ из проектов SmartCalc v1.0 или SmartCalc v2.0
-Модель должна представлять собой "Ядро" с оберткой на языке Python
-В модель должны быть вынесены все функциональные возможности калькулятора таким образом, чтобы в будущем ее можно было использовать без остальных слоев
-Подготовить полное покрытие unit-тестами методов, находящихся в слое модели
+В приложении должен быть реализован раздел справки с описанием интерфейса программы в произвольной форме
+Программа должна хранить историю операций, позволять загружать выражения из истории и очищать историю целиком
+История должна сохраняться между запусками приложения
+На вход программы могут подаваться как целые числа, так и вещественные числа, записанные и через точку, и в экспоненциальной форме записи
+Вычисление должно производится после полного ввода вычисляемого выражения и нажатия на символ =
+Вычисление произвольных скобочных арифметических выражений в инфиксной нотации
+Вычисление произвольных скобочных арифметических выражений в инфиксной нотации с подстановкой значения переменной x в виде числа
+Построение графика функции, заданной с помощью выражения в инфиксной нотации с переменной x (с координатными осями, отметкой используемого масштаба и сеткой с адаптивным шагом)
+Не требуется предоставлять пользователю возможность менять масштаб
+Область определения и область значения функций ограничиваются по крайней мере числами от -1000000 до 1000000
+Для построения графиков функции необходимо дополнительно указывать отображаемые область определения и область значения
+Проверяемая точность дробной части - минимум 7 знаков после запятой
+У пользователя должна быть возможность ввода до 255 символов
+Скобочные арифметические выражения в инфиксной нотации должны поддерживать следующие арифметические операции и математические функции:

BONUS

+Предусмотреть специальный режим "кредитный калькулятор"
+Предусмотреть специальный режим "калькулятор доходности вкладов"

Добавить в приложение настройки:

+Добавить считывание настроек из файла конфигурации при запуске программы
+Вынести в файл конфигурации от 3 параметров на выбор, например цвет заднего фона, размер шрифта и т. д.
+Добавить описание редактируемых параметров в справку
+Добавить в приложение логирование:

+В логах хранить историю операций
+Логи сохранять в папку logs, по одному файлу на период ротации
+Должна быть возможность настройки периода ротации логов (час/день/месяц)
+Файлы должны быть названы в соответствии со следующим шаблоном: logs_dd-MM-yy-hh-mm-ss (указывается время создания файла)

Part 5. Дополнительно. Кроссплатформенность
+-Сделать приложение кроссплатформенным:

+-Добавить поддержу ОС Linux
+-Добавить поддержку ОС Windows
+-Установщик также должен быть доступен под ОС Linux и Windows (допустимо использование нескольких разных установщиков)